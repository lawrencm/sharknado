// components/ActivityItem.tsx
import {
  Enum_Monitoringactivity_Type,
  MonitoringActivityEntity,
} from '@sharknado/cms-api';
import React from 'react';

export interface ActivityItemProps extends MonitoringActivityEntity {
  className?: string;
  actions?: JSX.Element | null;
  showStatus?: boolean;
}

// Define the enum

// Define a type for your icons object
type iconsDict<T extends string | symbol | number, U> = {
  [K in T]: U;
};

const icons: iconsDict<Enum_Monitoringactivity_Type, JSX.Element> = {
  [Enum_Monitoringactivity_Type.TaggedShark]: (
    <svg
      width="28"
      height="22"
      viewBox="0 0 28 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M13.9378 16.2302V16.2323C17.7658 16.2323 21.5944 16.2323 25.4224 16.2323C25.9183 16.2323 26.4149 16.2387 26.9108 16.2274C27.2462 16.2195 27.4913 15.9801 27.4998 15.6831C27.5076 15.3911 27.2639 15.1382 26.9386 15.1062C26.8568 15.0984 26.773 15.1034 26.6906 15.1034C24.8832 15.1034 23.075 15.102 21.2676 15.1077C21.0694 15.1077 20.9536 15.0736 20.8804 14.8562C20.0776 12.4775 19.9177 10.0591 20.4051 7.59665C20.7831 5.68834 21.5134 3.92426 22.5692 2.29304C22.7795 1.96835 22.8299 1.63799 22.6452 1.29128C22.4534 0.932499 22.1387 0.787564 21.7401 0.779749C20.3639 0.753462 19.0069 0.898396 17.6734 1.23942C14.1275 2.14668 11.4185 4.25178 9.28708 7.15758C7.60257 9.45451 6.43243 12.0072 5.6566 14.7425C5.57845 15.0174 5.47473 15.1169 5.1813 15.1112C4.1419 15.0913 3.10178 15.102 2.06237 15.1027C1.70785 15.1027 1.35261 15.0913 0.999514 15.1141C0.728117 15.1311 0.495795 15.2846 0.500058 15.5673C0.5029 15.7606 0.609469 15.9943 0.747299 16.13C0.848896 16.2302 1.07695 16.2266 1.24889 16.2274C5.47899 16.2323 9.70838 16.2309 13.9385 16.2309L13.9378 16.2302ZM10.7862 21.2212C12.3804 21.2212 13.974 21.2212 15.5683 21.2205C15.721 21.2205 15.8773 21.2219 16.0272 21.1949C16.2887 21.1466 16.4379 20.9775 16.4599 20.7097C16.4819 20.444 16.3711 20.2457 16.1217 20.1513C16.0038 20.1065 15.8681 20.0916 15.7409 20.0916C12.4344 20.0887 9.12864 20.0887 5.82214 20.0909C5.72907 20.0909 5.63387 20.1029 5.54364 20.1257C5.2694 20.1946 5.11452 20.3786 5.11949 20.6585C5.12376 20.9534 5.28716 21.1459 5.58201 21.1985C5.71984 21.2233 5.86406 21.2212 6.00544 21.2212C7.59972 21.2226 9.19329 21.2219 10.7876 21.2219L10.7862 21.2212ZM20.246 18.719C20.9074 18.719 21.5689 18.719 22.2303 18.719C23.0097 18.719 23.7898 18.7232 24.5692 18.7161C24.8924 18.7133 25.1304 18.4973 25.1354 18.2024C25.1411 17.8941 24.9883 17.6867 24.6771 17.6199C24.5855 17.6 24.4903 17.5914 24.3965 17.5914C21.6207 17.59 18.8449 17.5886 16.0692 17.5907C15.6258 17.5907 15.3644 17.8096 15.3573 18.1627C15.3502 18.5129 15.6081 18.7182 16.0642 18.719C17.4581 18.7204 18.8521 18.719 20.246 18.719ZM6.21077 18.7182C7.21536 18.7182 8.21996 18.7147 9.22455 18.7204C9.53858 18.7218 9.74959 18.5897 9.83484 18.2898C9.93928 17.9218 9.63094 17.5957 9.15919 17.5943C7.20897 17.5886 5.25946 17.5893 3.30923 17.5936C2.86164 17.5943 2.61511 17.8145 2.62008 18.179C2.62506 18.5264 2.86235 18.7168 3.30284 18.7182C4.27191 18.7204 5.24098 18.7182 6.21006 18.7182H6.21077ZM20.5444 21.2198C21.0872 21.2198 21.63 21.2283 22.1728 21.2169C22.5799 21.2091 22.8207 20.9981 22.8314 20.6742C22.842 20.3445 22.5713 20.0894 22.1713 20.0873C21.0978 20.0809 20.0236 20.0809 18.9501 20.0916C18.5274 20.0958 18.2908 20.326 18.3 20.6763C18.3093 21.0102 18.5352 21.2091 18.9522 21.2177C19.4829 21.2283 20.0144 21.2205 20.5451 21.2205L20.5444 21.2198ZM12.6021 18.7182C12.8849 18.7182 13.1676 18.7246 13.4497 18.7168C13.7765 18.7069 13.9989 18.5051 14.028 18.2103C14.055 17.936 13.849 17.639 13.5371 17.6227C12.9282 17.59 12.3144 17.5886 11.7055 17.6199C11.3929 17.6362 11.194 17.9268 11.2174 18.2081C11.2423 18.5037 11.4632 18.7069 11.7907 18.7175C12.0614 18.7268 12.3321 18.7197 12.6028 18.719L12.6021 18.7182Z"
        fill="white"
      />
    </svg>
  ),
  [Enum_Monitoringactivity_Type.SharkSighting]: (
    <svg
      width="26"
      height="18"
      viewBox="0 0 26 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M25.5835 8.65828C25.5466 8.57496 24.6532 6.5932 22.6673 4.60723C20.021 1.96102 16.6787 0.5625 13 0.5625C9.32124 0.5625 5.97894 1.96102 3.33272 4.60723C1.34675 6.5932 0.449209 8.57812 0.416513 8.65828C0.368539 8.76619 0.34375 8.88296 0.34375 9.00105C0.34375 9.11914 0.368539 9.23592 0.416513 9.34383C0.453427 9.42715 1.34675 11.4079 3.33272 13.3938C5.97894 16.039 9.32124 17.4375 13 17.4375C16.6787 17.4375 20.021 16.039 22.6673 13.3938C24.6532 11.4079 25.5466 9.42715 25.5835 9.34383C25.6314 9.23592 25.6562 9.11914 25.6562 9.00105C25.6562 8.88296 25.6314 8.76619 25.5835 8.65828ZM13 15.75C9.75366 15.75 6.91761 14.5698 4.56987 12.2432C3.60657 11.2852 2.78702 10.1928 2.13671 9C2.78684 7.80708 3.60641 6.71468 4.56987 5.75684C6.91761 3.4302 9.75366 2.25 13 2.25C16.2463 2.25 19.0824 3.4302 21.4301 5.75684C22.3953 6.71445 23.2166 7.80685 23.8685 9C23.1081 10.4196 19.7953 15.75 13 15.75ZM13 3.9375C11.9987 3.9375 11.0199 4.23441 10.1874 4.79069C9.35489 5.34696 8.70602 6.13761 8.32285 7.06266C7.93968 7.98772 7.83943 9.00562 8.03476 9.98764C8.2301 10.9697 8.71226 11.8717 9.42026 12.5797C10.1283 13.2877 11.0303 13.7699 12.0123 13.9652C12.9944 14.1606 14.0123 14.0603 14.9373 13.6771C15.8624 13.294 16.653 12.6451 17.2093 11.8126C17.7656 10.9801 18.0625 10.0013 18.0625 9C18.0611 7.65777 17.5273 6.37091 16.5782 5.42181C15.6291 4.47271 14.3422 3.9389 13 3.9375ZM13 12.375C12.3325 12.375 11.68 12.1771 11.1249 11.8062C10.5699 11.4354 10.1373 10.9083 9.8819 10.2916C9.62645 9.67486 9.55961 8.99626 9.68984 8.34157C9.82006 7.68688 10.1415 7.08552 10.6135 6.61351C11.0855 6.14151 11.6869 5.82007 12.3416 5.68985C12.9962 5.55962 13.6748 5.62646 14.2915 5.88191C14.9082 6.13735 15.4354 6.56993 15.8062 7.12495C16.177 7.67997 16.375 8.33249 16.375 9C16.375 9.89511 16.0194 10.7535 15.3865 11.3865C14.7535 12.0194 13.8951 12.375 13 12.375Z"
        fill="white"
      />
    </svg>
  ),
  [Enum_Monitoringactivity_Type.WhaleCarcass]: (
    <svg
      width="26"
      height="18"
      viewBox="0 0 26 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M25.5835 8.65828C25.5466 8.57496 24.6532 6.5932 22.6673 4.60723C20.021 1.96102 16.6787 0.5625 13 0.5625C9.32124 0.5625 5.97894 1.96102 3.33272 4.60723C1.34675 6.5932 0.449209 8.57812 0.416513 8.65828C0.368539 8.76619 0.34375 8.88296 0.34375 9.00105C0.34375 9.11914 0.368539 9.23592 0.416513 9.34383C0.453427 9.42715 1.34675 11.4079 3.33272 13.3938C5.97894 16.039 9.32124 17.4375 13 17.4375C16.6787 17.4375 20.021 16.039 22.6673 13.3938C24.6532 11.4079 25.5466 9.42715 25.5835 9.34383C25.6314 9.23592 25.6562 9.11914 25.6562 9.00105C25.6562 8.88296 25.6314 8.76619 25.5835 8.65828ZM13 15.75C9.75366 15.75 6.91761 14.5698 4.56987 12.2432C3.60657 11.2852 2.78702 10.1928 2.13671 9C2.78684 7.80708 3.60641 6.71468 4.56987 5.75684C6.91761 3.4302 9.75366 2.25 13 2.25C16.2463 2.25 19.0824 3.4302 21.4301 5.75684C22.3953 6.71445 23.2166 7.80685 23.8685 9C23.1081 10.4196 19.7953 15.75 13 15.75ZM13 3.9375C11.9987 3.9375 11.0199 4.23441 10.1874 4.79069C9.35489 5.34696 8.70602 6.13761 8.32285 7.06266C7.93968 7.98772 7.83943 9.00562 8.03476 9.98764C8.2301 10.9697 8.71226 11.8717 9.42026 12.5797C10.1283 13.2877 11.0303 13.7699 12.0123 13.9652C12.9944 14.1606 14.0123 14.0603 14.9373 13.6771C15.8624 13.294 16.653 12.6451 17.2093 11.8126C17.7656 10.9801 18.0625 10.0013 18.0625 9C18.0611 7.65777 17.5273 6.37091 16.5782 5.42181C15.6291 4.47271 14.3422 3.9389 13 3.9375ZM13 12.375C12.3325 12.375 11.68 12.1771 11.1249 11.8062C10.5699 11.4354 10.1373 10.9083 9.8819 10.2916C9.62645 9.67486 9.55961 8.99626 9.68984 8.34157C9.82006 7.68688 10.1415 7.08552 10.6135 6.61351C11.0855 6.14151 11.6869 5.82007 12.3416 5.68985C12.9962 5.55962 13.6748 5.62646 14.2915 5.88191C14.9082 6.13735 15.4354 6.56993 15.8062 7.12495C16.177 7.67997 16.375 8.33249 16.375 9C16.375 9.89511 16.0194 10.7535 15.3865 11.3865C14.7535 12.0194 13.8951 12.375 13 12.375Z"
        fill="white"
      />
    </svg>
  ),
};

const getIcon = (type: Enum_Monitoringactivity_Type): JSX.Element | null => {
  return icons[type] || <p>no</p>;
};

const getText = (type: Enum_Monitoringactivity_Type, attributes: any) => {
  const dt = new Date(attributes.datetime);
  const timeString = dt.getHours() + ':' + dt.getMinutes();

  //cretae a date string in the format of dd/mm
  const dateString = dt.getDate() + '/' + (dt.getMonth() + 1);

  const texts = {
    [Enum_Monitoringactivity_Type.TaggedShark]: `Tagged ${attributes.species} detected at ${attributes.location} at ${timeString} on ${dateString}`,
    [Enum_Monitoringactivity_Type.SharkSighting]: `Public report ${attributes.species} sighted ${timeString} ${dateString}, ${attributes.location}. Reported ${timeString} ${dateString}`,
    [Enum_Monitoringactivity_Type.WhaleCarcass]: `DPIRD (Fisheries) advise whale carcass sighted ${timeString} ${dateString}, ${
      attributes.location
    } ${attributes.additionalInfo ?? ''}`,
  };

  return texts[type] || '';
};

const ActivityItem: React.FC<ActivityItemProps> = ({
  attributes,
  actions,

  showStatus = false,
  className,
}) => {

  const isEditable = true

  const { type, location, details } = attributes || {};
  const iconColor =
    type === Enum_Monitoringactivity_Type.TaggedShark
      ? 'bg-red-500'
      : 'bg-blue-500';

  return (
    <div
      className={`flex items-center p-4 space-x-4 border-b rounded-md bg-[#012922]/5 shadow-sm hover:bg-gray-50 ${className} ${
        showStatus
          ? attributes?.publishedAt
            ? 'border-x-8 border-green-200'
            : 'border-x-8 border-orange-200'
          : ''
      }`}
    >
      <div
        className={`w-12 h-12 rounded-full flex items-center justify-center ${iconColor}`}
      >
        {type && getIcon(type)}
      </div>
      <div className="flex-1">
        <h3 className="text-sm font-semibold text-gray-800">{location}</h3>
        <p className="text-sm text-gray-600">{details}</p>
        <p className="text-xs text-gray-400 mt-1">
          {type && getText(type, attributes)}
        </p>
      </div>
      <div>
        {actions}
        {/* <button className="text-xs text-blue-600 hover:underline">
          See More
        </button> */}
      </div>

{isEditable && (

<FormField
  control={form.control}
  name="username"
  render={({ field }) => (
    <FormItem>
      <FormLabel>Username</FormLabel>
      <FormControl>
        <Input placeholder="shadcn" {...field} />
      </FormControl>
      <FormDescription>This is your public display name.</FormDescription>
      <FormMessage />
    </FormItem>
  )}


)}

    </div>
  );
};

export { ActivityItem };
